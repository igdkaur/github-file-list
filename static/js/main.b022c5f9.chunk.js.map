{"version":3,"sources":["time.js","index.js"],"names":["Time","time","timeString","moment","fromNow","className","getFileName","file","FileIcon","name","icon","type","FileListItem","commit","latestCommit","updated_at","CommitMessage","message","FileList","files","map","id","ReactDOM","render","document","querySelector"],"mappings":"yLAceA,EAXF,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACVC,EAAaC,IAAOF,GAAMG,UAChC,OACA,sBAAMC,UAAU,OAAhB,SACCH,KCgCD,SAASI,EAAYC,GACnB,MAAO,CACL,cAACC,EAAD,CAAUD,KAAMA,GAAW,GAC3B,oBAAIF,UAAU,YAAd,SACGE,EAAKE,MADuB,IAMnC,SAASD,EAAT,GAA6B,IACvBE,EAAO,iBAIX,MAHkB,WAFQ,EAARH,KAETI,OACPD,EAAO,aAGP,oBAAIL,UAAU,YAAd,SACE,mBAAGA,UAAS,aAAQK,OAK1B,IAAME,EAAe,SAAC,GAAD,IAAGL,EAAH,EAAGA,KAAH,OACnB,qBAAIF,UAAU,iBAAd,UACGC,EAAYC,GACb,cAAC,EAAD,CAAeM,OAAQN,EAAKO,eAC5B,oBAAIT,UAAU,MAAd,SACE,cAAC,EAAD,CAAMJ,KAAMM,EAAKQ,mBAKjBC,EAAgB,SAAC,GAAD,IAAGH,EAAH,EAAGA,OAAH,OACpB,oBAAIR,UAAU,iBAAd,SAAgCQ,EAAOI,WAGnCC,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACf,uBAAOd,UAAU,YAAjB,SACE,gCACGc,EAAMC,KAAI,SAACb,GAAD,OACT,cAAC,EAAD,CAA4BA,KAAMA,GAAfA,EAAKc,YAyBhCC,IAASC,OACP,cAAC,EAAD,CAAUJ,MA/FM,CAChB,CACEE,GAAI,EACJZ,KAAM,MACNE,KAAM,SACNI,WAAY,sBACZD,aAAc,CACZG,QAAS,mBAGb,CACEI,GAAI,EACJZ,KAAM,QACNE,KAAM,SACNI,WAAY,sBACZD,aAAc,CACZG,QAAS,mBAGb,CACEI,GAAI,EACJZ,KAAM,SACNE,KAAM,OACNI,WAAY,sBACZD,aAAc,CACZG,QAAS,sBAuEbO,SAASC,cAAc,W","file":"static/js/main.b022c5f9.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nconst Time = ({ time }) => {\nconst timeString = moment(time).fromNow();\nreturn (\n<span className=\"time\">\n{timeString}\n</span>\n);\n};\nTime.propTypes = {\ntime: PropTypes.string.isRequired\n};\nexport default Time;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport PropTypes from \"prop-types\";\nimport Time from './time';\n\n// Create the FileList component. In the interest of doing the simplest thing that\n// can possibly work, we’ll render a plain unordered list of file names. Once it\n// works we’ll extract the list items into a FileListItem component.\nconst testFiles = [\n  {\n    id: 1,\n    name: \"src\",\n    type: \"folder\",\n    updated_at: \"2016-07-11 21:24:00\",\n    latestCommit: {\n      message: \"Initial commit\",\n    },\n  },\n  {\n    id: 2,\n    name: \"tests\",\n    type: \"folder\",\n    updated_at: \"2016-07-11 21:24:00\",\n    latestCommit: {\n      message: \"Initial commit\",\n    },\n  },\n  {\n    id: 3,\n    name: \"README\",\n    type: \"file\",\n    updated_at: \"2016-07-18 21:24:00\",\n    latestCommit: {\n      message: \"Added a readme\",\n    },\n  },\n];\n\nfunction getFileName(file) {\n  return [\n    <FileIcon file={file} key={0} />,\n    <td className=\"file-name\" key={1}>\n      {file.name}\n    </td>,\n  ];\n}\n\nfunction FileIcon({ file }) {\n  let icon = \"fa-file-text-o\";\n  if (file.type === \"folder\") {\n    icon = \"fa-folder\";\n  }\n  return (\n    <td className=\"file-icon\">\n      <i className={`fa ${icon}`} />\n    </td>\n  );\n}\n\nconst FileListItem = ({ file }) => (\n  <tr className=\"file-list-item\">\n    {getFileName(file)}\n    <CommitMessage commit={file.latestCommit} />\n    <td className=\"age\">\n      <Time time={file.updated_at} />\n    </td>\n  </tr>\n);\n\nconst CommitMessage = ({ commit }) => (\n  <td className=\"commit-message\">{commit.message}</td>\n);\n\nconst FileList = ({ files }) => (\n  <table className=\"file-list\">\n    <tbody>\n      {files.map((file) => (\n        <FileListItem key={file.id} file={file} />\n      ))}\n    </tbody>\n  </table>\n);\n\nFileList.propTypes = {\n  // notice small p\n  files: PropTypes.array, // notice big P\n};\n\nFileIcon.propTypes = {\n  file: PropTypes.object.isRequired,\n};\n\nFileListItem.propTypes = {\n  file: PropTypes.object.isRequired,\n};\n\nCommitMessage.propTypes = {\n  commit: PropTypes.object.isRequired,\n};\n\n\n\nReactDOM.render(\n  <FileList files={testFiles} />,\n  document.querySelector(\"#root\")\n);\n\n"],"sourceRoot":""}